#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Exam_Pro
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Exam_database")]
	public partial class DbmlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertexam_table(exam_table instance);
    partial void Updateexam_table(exam_table instance);
    partial void Deleteexam_table(exam_table instance);
    #endregion
		
		public DbmlDataContext() : 
				base(global::Exam_Pro.Properties.Settings.Default.Exam_databaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbmlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbmlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbmlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbmlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<exam_table> exam_tables
		{
			get
			{
				return this.GetTable<exam_table>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.exam_table")]
	public partial class exam_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _s_no;
		
		private string _usn;
		
		private string _s_name;
		
		private string _sub_code;
		
		private string _sub_name;
		
		private string _sem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ons_noChanging(string value);
    partial void Ons_noChanged();
    partial void OnusnChanging(string value);
    partial void OnusnChanged();
    partial void Ons_nameChanging(string value);
    partial void Ons_nameChanged();
    partial void Onsub_codeChanging(string value);
    partial void Onsub_codeChanged();
    partial void Onsub_nameChanging(string value);
    partial void Onsub_nameChanged();
    partial void OnsemChanging(string value);
    partial void OnsemChanged();
    #endregion
		
		public exam_table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_no", DbType="VarChar(50)")]
		public string s_no
		{
			get
			{
				return this._s_no;
			}
			set
			{
				if ((this._s_no != value))
				{
					this.Ons_noChanging(value);
					this.SendPropertyChanging();
					this._s_no = value;
					this.SendPropertyChanged("s_no");
					this.Ons_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usn", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string usn
		{
			get
			{
				return this._usn;
			}
			set
			{
				if ((this._usn != value))
				{
					this.OnusnChanging(value);
					this.SendPropertyChanging();
					this._usn = value;
					this.SendPropertyChanged("usn");
					this.OnusnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_s_name", DbType="VarChar(50)")]
		public string s_name
		{
			get
			{
				return this._s_name;
			}
			set
			{
				if ((this._s_name != value))
				{
					this.Ons_nameChanging(value);
					this.SendPropertyChanging();
					this._s_name = value;
					this.SendPropertyChanged("s_name");
					this.Ons_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_code", DbType="VarChar(50)")]
		public string sub_code
		{
			get
			{
				return this._sub_code;
			}
			set
			{
				if ((this._sub_code != value))
				{
					this.Onsub_codeChanging(value);
					this.SendPropertyChanging();
					this._sub_code = value;
					this.SendPropertyChanged("sub_code");
					this.Onsub_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_name", DbType="VarChar(50)")]
		public string sub_name
		{
			get
			{
				return this._sub_name;
			}
			set
			{
				if ((this._sub_name != value))
				{
					this.Onsub_nameChanging(value);
					this.SendPropertyChanging();
					this._sub_name = value;
					this.SendPropertyChanged("sub_name");
					this.Onsub_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sem", DbType="VarChar(50)")]
		public string sem
		{
			get
			{
				return this._sem;
			}
			set
			{
				if ((this._sem != value))
				{
					this.OnsemChanging(value);
					this.SendPropertyChanging();
					this._sem = value;
					this.SendPropertyChanged("sem");
					this.OnsemChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
